---
const url = Astro.request.canonicalURL.toString();
const path = '/' + url.replace(Astro.site, '');
---
<style lang="scss">
  .site-header {
    align-items: center;
    padding: 1.25rem;
    position: relative;

    @media (min-width: 390px) {
      padding: 2.5rem;
    }

    &.show {
      background-color: var(--color-menu-background);
    }

    .site-title {
      font-size: 2rem;
      font-variation-settings: 'wdth' 125;
      font-weight: 800;
      padding-right: 3.75rem + 1.25rem + 1.25rem;
      text-transform: uppercase;

      a {
        color: var(--color-black);
        text-decoration: none;
      }
    }

    nav {
      @media (min-width: 992px) {
        width: 768px;
      }

      .menu-toggle__container  {
        position: absolute;
        top: 0.5rem;
        right: 0;
        padding: 1.25rem;

        @media (min-width: 390px) {
          padding: 2.5rem;
        }
      }

      @at-root .no-js #menuToggle {
        display: none;
      }

      #menuToggle {
        align-items: center;
        background-color: var(--color-button-menu-background);
        cursor: pointer;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        height: 3.75rem;
        width: 3.75rem;

        @at-root .site-header.show nav #menuToggle {
          background-color: var(--color-button-menu-background-show);
        }

        @media (min-width: 992px) {
          border: 0;
          clip: rect(0 0 0 0);
          height: auto;
          margin: 0;
          overflow: hidden;
          padding: 0;
          position: absolute;
          width: 1px;
          white-space: nowrap;
        }

        #menuToggleIcon {
          display: flex;
          flex-direction: column;
          gap: 6px;

          div {
            background-color: var(--color-white);
            display: block;
            width: 26px;
            height: 4px;
            border-radius: 1px;
            transform-origin: center;
            transition: all 0.3s ease-out;
          }

          @at-root .site-header.show nav #menuToggle #menuToggleIcon {
            display: block;

            div {
              opacity: 0;
            }

            div:first-child {
              opacity: 1;
              width: 30px;
              transform: translate(0, 4px) rotate(-45deg);
            }

            div:last-child {
              opacity: 1;
              width: 30px;
              transform: translate(0, -4px) rotate(45deg);
            }
          }
        }
      }

      ul {
        list-style-type: none;
        padding: 0;
        grid-row: 2 / 3;

        @media (min-width: 992px) {
          align-items: center;
          display: flex;
          justify-content: space-between;
        }

        @at-root .site-header:not(.show) nav ul {
          @media (max-width: 992px) {
            border: 0;
            clip: rect(0 0 0 0);
            height: auto;
            margin: 0;
            overflow: hidden;
            padding: 0;
            position: absolute;
            width: 1px;
            white-space: nowrap;
          }
        }

        li {
          a {
            align-items: center;
            color: var(--color-nav-link);
            display: flex;
            font-weight: 800;
            height: 60px;
            justify-content: center;
            letter-spacing: 0.1em;
            min-width: 60px;
            text-decoration: none;
            text-transform: uppercase;
            width: auto;

            svg {
              fill: currentColor;
              height: 2rem;
              vertical-align: middle;
              width: 2rem;
            }
          }

          button {
            appearance: none;
            background-color: var(--color-white);
            border: 3px solid var(--color-mode-toggle-border);
            color: var(--color-black);
            align-items: center;
            cursor: pointer;
            border-radius: 1.875rem;
            display: flex;
            justify-content: center;
            height: 3.75rem;
            padding: 0;
            margin: 1.25rem auto 0 auto;

            span {
              align-items: center;
              border-radius: 50%;
              display: flex;
              height: 3.75rem;
              justify-content: center;
              width: 3.75rem;

              + span {
                background-color: var(--color-mode-toggle-active-background);
                color: var(--color-white);
                margin-left: -7px;
              }

              svg {
                fill: currentColor;
                height: 2rem;
                vertical-align: middle;
                width: 2rem;
              }
            }
          }
        }
      }
    }
  }
</style>
<header class="site-header" id="siteHeader">
  <div class="site-title"><a href="/">Tyler Combs</a></div>
  <nav id="nav">
    <div class="menu-toggle__container">
      <a href="#menu" class="menu-toggle" id="menuToggle" aria-expanded="false" aria-controls="menu"><span class="visually-hidden">Menu</span><div id="menuToggleIcon"><div></div><div></div><div></div></div></a>
    </div>
    <!-- <a href="#menu" id="menuToggle" aria-expanded="false" aria-controls="menu"><span class="visually-hidden">Menu</span><svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="m4 4h24c.6 0 1 .4 1 1v2c0 .6-.4 1-1 1h-24c-.6 0-1-.4-1-1v-2c0-.6.4-1 1-1z"/><path d="m4 24h24c.6 0 1 .4 1 1v2c0 .6-.4 1-1 1h-24c-.6 0-1-.4-1-1v-2c0-.6.4-1 1-1z"/><path d="m4 14h24c.6 0 1 .4 1 1v2c0 .6-.4 1-1 1h-24c-.6 0-1-.4-1-1v-2c0-.6.4-1 1-1z"/></svg></a> -->
    <ul id="menu">
      <li>
        <a href="/about/" class={path === '/about/' && ('active')}>About Me</a>
      </li>
      <li>
        <a href="/contact/" class={path === '/contact/' && ('active')}>Get in Touch</a>
      </li>
      <li>
        <a href="https://github.com/tylercombs" title="GitHub"><span class="visually-hidden">GitHub</span><svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="m11.4 24c0 .1-.1.2-.3.2s-.3-.1-.3-.2.1-.2.3-.2c.1 0 .3.1.3.2zm-1.8-.3c0 .1.1.2.2.3s.3 0 .4-.1c0-.1-.1-.2-.2-.3-.2 0-.4 0-.4.1zm2.5-.1c-.2 0-.3.1-.3.3 0 .1.2.2.3.1.2 0 .3-.1.3-.3 0 0-.1-.1-.3-.1zm3.7-21.6c-7.8 0-13.8 5.9-13.8 13.8 0 6.3 3.9 11.6 9.6 13.5.7.1 1-.3 1-.7s0-2.3 0-3.5c0 0-4 .8-4.8-1.7 0 0-.6-1.6-1.6-2.1 0 0-1.3-.9.1-.9 0 0 1.4.1 2.2 1.5 1.2 2.2 3.3 1.6 4.1 1.2.1-.9.5-1.5.9-1.9-3.2-.4-6.3-.8-6.3-6.2 0-1.6.4-2.3 1.3-3.3-.1-.4-.6-1.9.1-3.8 1.2-.4 3.9 1.5 3.9 1.5 1.1-.3 2.3-.5 3.5-.5s2.4.2 3.5.5c0 0 2.7-1.9 3.9-1.5.8 2 .3 3.5.1 3.8.9 1 1.5 1.8 1.5 3.3 0 5.4-3.3 5.9-6.5 6.2.5.4 1 1.3 1 2.6v4.7c0 .4.3.8 1 .7 5.7-1.8 9.5-7.2 9.5-13.4 0-7.9-6.4-13.8-14.2-13.8zm-8.3 19.5c-.1.1-.1.2 0 .3s.2.1.3.1c.1-.1.1-.2 0-.3-.1-.2-.2-.2-.3-.1zm-.6-.5c0 .1 0 .2.1.2.1.1.2 0 .2 0 0-.1 0-.2-.1-.2-.1-.1-.2 0-.2 0zm1.8 2c-.1.1-.1.2.1.4.1.1.3.1.4.1.1-.1 0-.2-.1-.4-.2-.2-.3-.2-.4-.1zm-.6-.8c-.1.1-.1.2 0 .3s.2.2.3.1.1-.2 0-.4c-.1 0-.2-.1-.3 0z"/></svg></a>
      </li>
      <li>
        <a href="https://www.linkedin.com/in/tylercombs/" title="LinkedIn"><span class="visually-hidden">LinkedIn</span><svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="m26.3 4h-20.6c-.9 0-1.7.8-1.7 1.7v20.5c0 1 .8 1.7 1.7 1.7h20.6c.9 0 1.7-.8 1.7-1.7v-20.5c0-.9-.8-1.7-1.7-1.7zm-15 20.6h-3.6v-11.5h3.6zm-1.8-13c-1.1 0-2.1-.9-2.1-2.1s.9-2.1 2.1-2.1c1.1 0 2.1.9 2.1 2.1-.1 1.1-1 2.1-2.1 2.1zm15.1 13h-3.6v-5.6c0-1.3 0-3-1.8-3-1.9 0-2.1 1.4-2.1 2.9v5.7h-3.6v-11.5h3.4v1.6c.5-.9 1.6-1.8 3.4-1.8 3.6 0 4.3 2.4 4.3 5.5z"/></svg></a>
      </li>
      <li>
        <button type="button" class="mode-toggle" id="modeToggle" title="Toggle Light and Dark Modes">
          <span><span class="visually-hidden">Light Mode</span><svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="m9.6 11.2c.2.2.5.3.8.3s.6-.1.8-.3c.4-.4.4-1.2 0-1.6l-2.1-2.1c-.4-.4-1.1-.4-1.6 0-.4.5-.4 1.2 0 1.6zm6.4-2c.6 0 1.1-.5 1.1-1.1v-3c0-.6-.5-1.1-1.1-1.1s-1.1.5-1.1 1.1v3c0 .6.5 1.1 1.1 1.1zm-6.8 6.8c0-.6-.5-1.1-1.1-1.1h-3c-.6 0-1.1.5-1.1 1.1s.5 1.1 1.1 1.1h3c.6 0 1.1-.5 1.1-1.1zm12.4-4.4c.3 0 .6-.1.8-.3l2.1-2.1c.4-.4.4-1.2 0-1.6s-1.2-.4-1.6 0l-2.1 2.1c-.4.4-.4 1.2 0 1.6.2.1.5.3.8.3zm-5.6 11.2c-.6 0-1.1.5-1.1 1.1v3c0 .6.5 1.1 1.1 1.1s1.1-.5 1.1-1.1v-3c0-.6-.5-1.1-1.1-1.1zm-6.4-2-2.1 2.1c-.4.4-.4 1.2 0 1.6.2.2.5.3.8.3s.6-.1.8-.3l2.1-2.1c.4-.4.4-1.2 0-1.6-.4-.5-1.1-.5-1.6 0zm17.3-5.9h-3c-.6 0-1.1.5-1.1 1.1s.5 1.1 1.1 1.1h3c.6 0 1.1-.5 1.1-1.1s-.5-1.1-1.1-1.1zm-4.5 5.9c-.4-.4-1.2-.4-1.6 0s-.4 1.2 0 1.6l2.1 2.1c.2.2.5.3.8.3s.6-.1.8-.3c.4-.4.4-1.2 0-1.6zm-6.4-10c-2.9 0-5.2 2.3-5.2 5.2s2.4 5.2 5.2 5.2c2.9 0 5.2-2.4 5.2-5.2 0-2.9-2.3-5.2-5.2-5.2z"/></svg></span>
          <span><span class="visually-hidden">Dark Mode</span><svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="m22.1 20.4c-.5.1-.9.1-1.3.1-3.4 0-6.3-2.8-6.3-6.3 0-2.3 1.2-4.3 3.2-5.4.3-.2.2-.6-.1-.7-.4 0-1.1-.1-1.5-.1-4.5 0-8.1 3.6-8.1 8s3.6 8 8.1 8c2.5 0 4.8-1.1 6.3-3 .2-.2 0-.6-.3-.6z"/></svg></span>
        </button>
      </li>
    </ul>
  </nav>
</header>

<script>
  // Menu Toggle.
  const menuToggle = document.getElementById('menuToggle');
  const header = document.getElementById('siteHeader');
  menuToggle.addEventListener('click', () => {
    header.classList.toggle('show');
  });

  // Color Mode Toggle.
  const STORAGE_KEY = 'user-color-scheme';
  const COLOR_MODE_KEY = '--color-mode';

  const modeToggleButton = document.getElementById('modeToggle');

  const getCSSCustomProp = propKey => {
    let response = getComputedStyle(document.documentElement).getPropertyValue(propKey);

    if (response.length) {
      response = response.replace(/\"/g, '').trim();
    }

    return response;
  };

  const applySetting = passedSetting => {
    let currentSetting = passedSetting || localStorage.getItem(STORAGE_KEY);

    if (currentSetting) {
      document.documentElement.setAttribute('data-user-color-scheme', currentSetting);
    }
  };

  const toggleSetting = () => {
    let currentSetting = localStorage.getItem(STORAGE_KEY);

    switch (currentSetting) {
      case null:
        currentSetting = getCSSCustomProp(COLOR_MODE_KEY) === 'dark' ? 'light' : 'dark';
        break;
      case 'light':
        currentSetting = 'dark';
        break;
      case 'dark':
        currentSetting = 'light';
        break;
    }

    localStorage.setItem(STORAGE_KEY, currentSetting);

    return currentSetting;
  };

  modeToggleButton.addEventListener('click', event => {
    event.preventDefault();
    applySetting(toggleSetting());
  });

  applySetting();
</script>