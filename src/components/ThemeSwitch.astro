---
import Icon from './Icon.astro';
---

<div class="themeSwitch__container">
  <fieldset id="themeSwitch" aria-label="Theme Switch" role="radiogroup">
    <label>
      <input type="radio" id="system" name="theme" value="system" checked />
      <span class="visually-hidden">System Mode</span>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="currentColor"
        viewBox="0 0 24 24">
        <path
          clip-rule="evenodd"
          d="m3 5.5c0-1.4 1.1-2.5 2.5-2.5h12.9c1.5 0 2.6 1.1 2.6 2.5v9.6c0 1.4-1.1 2.5-2.5 2.5h-3.5c.2.7.6 1.4 1.2 1.9.4.3.4.8.1 1.2-.2.2-.4.3-.6.3h-7.4c-.5 0-.8-.4-.8-.8 0-.2.1-.5.3-.6.6-.5 1-1.2 1.2-1.9h-3.5c-1.4 0-2.5-1.1-2.5-2.5zm1.7 0c0-.5.4-.8.8-.8h12.9c.5 0 .8.4.8.8v8.5c0 .5-.4.8-.8.8h-12.9c-.5 0-.8-.4-.8-.8z"
          fill-rule="evenodd"></path>
      </svg>
    </label>
    <label>
      <input type="radio" id="light" name="theme" value="light" />
      <span class="visually-hidden">Light Mode</span>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="currentColor"
        viewBox="0 0 24 24">
        <path
          d="m12 3c.5 0 .8.4.8.8v1.7c0 .5-.4.8-.8.8-.5 0-.8-.4-.8-.8v-1.7c0-.4.3-.8.8-.8zm0 14.6c.5 0 .8.4.8.8v1.7c0 .5-.4.8-.8.8-.5 0-.8-.4-.8-.8v-1.7c0-.4.3-.8.8-.8zm0-9c-1.9 0-3.4 1.5-3.4 3.4s1.5 3.4 3.4 3.4 3.4-1.5 3.4-3.4-1.5-3.4-3.4-3.4zm6.4-1.8c.3-.3.4-.9 0-1.2-.3-.3-.9-.4-1.2 0l-1.2 1.2c-.3.3-.3.9 0 1.2s.8.3 1.2 0zm-10.4 10.4c.3-.3.4-.9 0-1.2-.3-.3-.9-.4-1.2 0l-1.2 1.2c-.3.3-.3.9 0 1.2s.8.3 1.2 0c0 0 1.2-1.2 1.2-1.2zm13-5.2c0 .5-.4.8-.8.8h-1.7c-.5 0-.8-.4-.8-.8s.4-.8.8-.8h1.7c.4 0 .8.3.8.8zm-14.6 0c0 .5-.4.8-.8.8h-1.8c-.4 0-.8-.3-.8-.8s.4-.8.8-.8h1.7c.5 0 .9.3.9.8zm10.8 6.4c.3.3.9.3 1.2 0s.3-.8 0-1.2l-1.2-1.2c-.3-.3-.9-.4-1.2 0-.3.3-.4.9 0 1.2zm-10.4-10.4c.4.3.9.3 1.2 0s.3-.8 0-1.2l-1.2-1.2c-.3-.3-.8-.3-1.2 0s-.3.9 0 1.2z"
        ></path>
      </svg>
    </label>
    <label>
      <input type="radio" id="dark" name="theme" value="dark" />
      <span class="visually-hidden">Dark Mode</span>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="currentColor"
        viewBox="0 0 24 24">
        <path
          clip-rule="evenodd"
          d="m8.9 3.5c.2.2.3.5.2.8-1 4 1.4 8.1 5.4 9.1 1.8.5 3.6.2 5.3-.6.4-.2.9 0 1.1.4.1.2.1.4.1.6-1.2 4.9-6.2 7.8-11.1 6.6-4.9-1.3-7.9-6.2-6.6-11.1.6-2.6 2.3-4.7 4.7-5.9.3-.1.6-.1.9.1z"
          fill-rule="evenodd"></path>
      </svg>
    </label>
  </fieldset>
</div>

<style lang="scss">
  @use '../styles/_mixins.scss' as *;
  @use '../styles/_variables.scss' as *;

  .themeSwitch__container {
    --border-radius: 999rem;
    --border-width: 2px;
    border: var(--border-width) solid var(--color-theme-switch-border);
    border-radius: var(--border-radius);
    padding: 2px;
    position: relative;

    &::before {
      content: '';
      background-color: var(--color-theme-switch-background);
      border-radius: var(--border-radius);
      position: absolute;
      inset: calc(var(--border-width) * -1);
      transform: translate(2px, 2px);
      transition: transform 0.3s ease-out;
      z-index: -10;
    }

    &:hover {
      &::before {
        transform: translate(1px, 1px);
        transition: transform 0.1s ease-in;
      }
    }
  }

  #themeSwitch {
    border: 0;
    display: flex;
    margin: 0;
    padding: 0;
    position: relative;

    &::before {
      content: '';
      background-color: var(--color-theme-switch-background-active);
      border-radius: 50%;
      position: absolute;
      top: 0;
      bottom: 0;
      width: calc(100% / 3);
    }

    &.transition::before {
      transition: transform 0.3s ease-in-out;
    }

    &:has(#system:checked)::before {
      transform: translateX(0);
    }

    &:has(#light:checked)::before {
      transform: translateX(100%);
    }

    &:has(#dark:checked)::before {
      transform: translateX(200%);
    }

    input {
      @include visually-hidden;

      &:checked ~ .icon {
        color: var(--color-theme-switch-icon-active);
      }
    }

    &.transition input:checked ~ .icon {
      transition: color 0.3s ease-in-out;
    }

    label {
      align-items: center;
      cursor: pointer;
      display: flex;
      justify-content: center;
      width: 2.25rem;
      height: 2.25rem;
      z-index: 10;

      .icon {
        color: var(--color-theme-switch-icon);
        width: 1.5rem;
        height: 1.5rem;
      }
    }
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {
    // Theme Switch.
    const setTheme = (theme: string) => {
      if (theme) {
        // Update data-theme attr on html.
        document.documentElement.setAttribute('data-theme', theme);
        // Persist in local storage.
        window.localStorage.setItem('theme', theme);
        // Set radio state.
        const radio = document.getElementById(theme) as HTMLInputElement;
        if (radio) {
          radio.checked = true;
        }
      }
    };

    // Set switch state based on html data attr.
    const theme = document.documentElement.dataset.theme;
    const radio = document.getElementById(
      theme ? theme : 'system'
    ) as HTMLInputElement;
    if (radio) {
      radio.checked = true;
    }

    // Add event listeners for theme switches.
    document.querySelectorAll('#themeSwitch input').forEach((element) =>
      element.addEventListener('change', (event) => {
        event.preventDefault();
        // Add transition class to theme switch.
        document.getElementById('themeSwitch')?.classList.add('transition');
        // Set theme on change.
        setTheme((event.target as HTMLInputElement).value);
      })
    );
  });
</script>
